//
//  InterfaceMacro.h
//  QianfengSchool
//
//  Created by AlicePan on 16/5/30.
//  Copyright © 2016年 Combanc. All rights reserved.
//  通用宏

#ifndef UtilsMacro_h
#define UtilsMacro_h

#pragma mark - 颜色
#define RGBA(R/*红*/, G/*绿*/, B/*蓝*/, A/*透明*/)\
[UIColor colorWithRed:R/255.f green:G/255.f blue:B/255.f alpha:A]

#pragma mark - NSLog扩展
/**
 *  NSLog扩展
 */
#define NSLog(format, ...) do {                                                                          \
fprintf(stderr, "<%s : %d> %s\n",                                           \
[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String],  \
__LINE__, __func__);                                                        \
(NSLog)((format), ##__VA_ARGS__);                                           \
fprintf(stderr, "-------\n");                                               \
} while (0)

/**
 *  验证服务器返回的字符串数据
 */
#define VerifyValue(value)\
({id tmp;\
if ([value isKindOfClass:[NSNull class]]){\
tmp = @"";}\
else\
{tmp = value;}\
tmp;\
})\

#pragma mark - 使用NSUserDefaults 存储的相关字段和方法

///从NSUserDefaults中根据key取值
#define KUSERDEFAULT_OBJ4KEY(key) [[NSUserDefaults standardUserDefaults] objectForKey:key]
///设置NSUserDefaults的 obj 和 key
#define KUSERDEFAULT_SETOBJ4KEY(obj,key) [[NSUserDefaults standardUserDefaults]setObject:obj forKey:key]
/**
 *  设置NSUserDefaults的 bool 和 key
 */
#define KUSERDEFAULT_SETBOOL4KEY(bool,key) [[NSUserDefaults standardUserDefaults] setBool:bool forKey:key]

//userName 宏
#define kUserName @"userName"

//password 宏
#define kPassword @"password"

//token 宏
#define kToken @"token"

//handshakePassword 宏
#define kHandshakePassword @"handshakePassword"

//用户中文名称 eg:李咏梅
#define kCName @"cName"

//记录自动登录 1自动登录 0不自动登录
#define kAutoLogin @"autoLogin" 

//用户类型（string类型） 1：学生 2：老师 3：家长
#define kUserType @"userType"

//serverUrl 宏 用于保存门户的URL地址的key
#define kServerUrl @"serverUrl"

//家校互动地址
#define kJXHDServerUrl @"JXHDserverUrl"

//ftp上传目录
#define kAvatars @"avatars"               //头像
#define kPagepicture @"pagepicture"       //主页
#define kPhoto @"photo"                   //相册
#define kPhotopress @"photopress"         //相册缩略图
#define kSource @"source"                 //资源
#define kUpload @"upload"                 //附件 （tongzhi）
#define kUploadimage @"uploadimage"       //动态图片
#define kBook @"book"                     //图书
#define kClasslogo @"classlogo"           //班级头像


#pragma mark - 视图坐标计算
/**
 *  视图坐标计算
 */
#define KVIEW_WIDTH(view) view.frame.size.width
#define KVIEW_HEIGHT(view) view.frame.size.height
#define KVIEW_XPOINT(view) view.frame.origin.x
#define KVIEW_YPOINT(view) view.frame.origin.y
#define KVIEW_RIGHT_POINT(view) (view.frame.origin.x + view.frame.size.width)
#define KVIEW_BOTTOM_POINT(view) (view.frame.origin.y + view.frame.size.height)

#define kViewWidth(view) view.frame.size.width
#define kViewHeight(view) view.frame.size.height
#define kViewXPoint(view) view.frame.origin.x
#define kViewYPoint(view) view.frame.origin.y
#define kViewRightPoint(view) (view.frame.origin.x+view.frame.size.width)
#define kViewBottomPoint(view) (view.frame.origin.y+view.frame.size.height)


#define SCREEN_WIDTH ([UIScreen mainScreen].bounds.size.width)
#define SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)

#define K_SCREEN_WIDTH ([UIScreen mainScreen].bounds.size.width)
#define K_SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)
// Constants
#define K_PHONE_6_SCREEN_WIDTH (375.0f)
#define K_PHONE_6_SCREEN_HEIGHT (667.0f)
#define K_PHONE_5_SCREEN_WIDTH (320.f)
#define K_PHONE_5_SCREEN_HEIGHT (568.f)
#define K_STATUS_BAR_HEIGHT (20.f)
#define K_NAVIGATION_BAR_HEIGHT (44.f)
#define K_STATUS_BAR_AND_NAVI_BAR_HEIGHT (64.0f) // 20.0 + 44.0
#define K_TAB_BAR_HEIGHT (49.0f)
#define K_SEGMENTED_CONTROL_HEIGHT (29.f)
#define K_TOOL_BAR_HEIGHT (44.f)
#define K_SEARCH_BAR_HEIGHT (44.f)
#define K_TEXT_FIELD_HEIGHT (30.f)
#define K_SWITCH_HEIGHT (31.f)
#define K_ACTIVITY_INDICATOR_WH (20.f)
#define K_STEPPER_HEIGHT (29.f)
#define K_AD_BANNER_HEIGHT (66.f)
#define K_FLEXBTN_CELL_HEIGHT (120.f)
// Expressions
#define isScreenWidthEqual320 (fabs([UIScreen mainScreen].bounds.size.width - 320.f) < DBL_EPSILON)
#define isScreenWidthEqual375 (fabs([UIScreen mainScreen].bounds.size.width - 375.f) < DBL_EPSILON)
#define isScreenWidthEqual414 (fabs([UIScreen mainScreen].bounds.size.width - 414.f) < DBL_EPSILON)
#define isScreenHeightEqual480 (fabs([UIScreen mainScreen].bounds.size.height - 480.f) < DBL_EPSILON)
// Macros With Parameter
#define K_DEPENDED_SCREEN_WIDTH K_PHONE_6_SCREEN_WIDTH
#define K_DEPENDED_SCREEN_HEIGHT K_PHONE_6_SCREEN_HEIGHT

#define getWidth(w) ((float)w / K_DEPENDED_SCREEN_WIDTH * K_SCREEN_WIDTH)
#define getHeight(h) ((float)h / K_DEPENDED_SCREEN_HEIGHT * K_SCREEN_HEIGHT)
#define getPoint(x, y) (CGPointMake((getWidth(x), getHeight(y))))
#define getRect(x, y, w, h) (CGRectMake(getWidth(x), getHeight(y), getWidth(w), getHeight(h)))
#define getEdgeInsets(top, left, bottom, right) (UIEdgeInsetsMake(getHeight(top), getWidth(left), getHeight(bottom), getWidth(right)))

#define getHeightKeepWHAspect(w, aspect) ((float)(w) / (float)(aspect))
#define getHeightKeepWHAspectAndWidthEqualScreenW(h) ((float)h / K_DEPENDED_SCREEN_WIDTH * K_SCREEN_WIDTH)
#define getSizeKeepWHAspect1(w, aspect) (CGSizeMake(getWidth(w), getWidth(w) / (float)(aspect)))
#define getSizeKeepWHAspect2(w, h) getSizeKeepWHAspect1(w, (float)w / (float)h)

#define getWidthWithWHAspect(h, aspect) ((float)h * (float)aspect)
#define getSizeKeepHeightFitWholeScreen(w, h) (CGSizeMake(getWidthWithWHAspect(K_SCREEN_HEIGHT, (float)w / (float)h), K_SCREEN_HEIGHT))

#pragma mark - 系统版本
// 判断系统版本是否是iOS9
#define KIsIOS9 [[[UIDevice currentDevice] systemVersion] floatValue] >= 9.0
#define KIsIOS8 [[[UIDevice currentDevice] systemVersion] floatValue] >= 8.0
#define KIsIOS7 [[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0
#define KIsIOS6 [[[UIDevice currentDevice] systemVersion] hasPrefix:@"6"]
#define KIsIOS5 [[[UIDevice currentDevice] systemVersion] hasPrefix:@"5"]
// 获取系统版本 (NSString)
#define KIOS_Version_NSString [UIDevice currentDevice].systemVersion
// 获取系统版本 (float)
#define KIOS_Version_Float [[[UIDevice currentDevice] systemVersion] floatValue]
// 获取当前语言
#define KCurrentLanguage ([[NSLocale preferredLanguages] objectAtIndex:0])

#pragma mark - other
//列表页请求cell的个数
#define PAGECOUNT 10
//标题最多字数
#define MAX_TITLE_COUNT 100
//内容最多字数
#define MAX_CONTENT_COUNT 100
//分享内容最多字数
#define MAX_SHARE_CONTENT_COUNT 65535
////图片压缩大小倍数 如原来8M 要压缩成2M的压缩倍数
//#define FILE_COMPRESSIONQUALITY 0.3
//图片大小大于800kb的时候就压缩
#define FILE_MAXSIZE 800


#endif /* UtilsMacro_h */
